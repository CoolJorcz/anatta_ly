- if shares.length > 0
  %h3= kind.upcase + " " + type
  %ul
    - shares.each do |share|
      %li
        = link_to image_tag(share.item.image.url(:thumb)), item_path(share.item.id)
        = link_to share.item.name, item_path(share.item.id)
        %ul
          - unless share.item.user == current_user
            %li
              = link_to image_tag(profile_picture_path(share.item.user)), user_path(share.item.user)
              = "lender: " + share.item.user.name
          - unless share.borrower == current_user
            %li
              = link_to image_tag(profile_picture_path(share.borrower)), user_path(share.borrower)
              = "requester: " + share.borrower.name
          %li= "start: " + share.start_on.to_date.strftime("%m/%d/%Y")
          %li= "to: " + share.end_on.to_date.strftime("%m/%d/%Y")
          %li= link_to "share page", share_path(share.id)
          - if kind == "share"
            - if type == "requests"
              %li
                = link_to "approve", update_share_path(share_id: share.id, update_type: "approved"), { method: "put", controller: "shares" }
                = "|"
                = link_to "deny", update_share_path(share_id: share.id, update_type: "denied"), { method: "put", controller: "shares" }, confirm: "Are you sure you don't want to share with " + share.borrower.name + "?"
            - elsif type == "approvals"
              %li= link_to "picked up", update_share_path(share_id: share.id, update_type: "checkedout"), { method: "put", controller: "shares" }

            - elsif type == "checkouts"
              %li= link_to "returned", update_share_path(share_id: share.id, update_type: "returned"), { method: "put", controller: "shares" }
            - elsif kind == "borrow" &&  (type == "requests" || type == "approvals")
              %li= link_to "cancel request", update_share_path(share_id: share.id, update_type: "canceled"), { method: "put", controller: "shares" }, confirm: "Are you sure you don't want to borrow this item?"
- else
  %h1 Shares are empty!
